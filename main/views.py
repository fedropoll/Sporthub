from rest_framework import viewsets, status
from rest_framework.permissions import IsAuthenticatedOrReadOnly, AllowAny
from rest_framework.response import Response
from rest_framework.decorators import action
from drf_yasg.utils import swagger_auto_schema
from drf_yasg import openapi
from .models import Hall, Club, Review
from .serializers import (
    HallSerializer, ClubSerializer, ReviewSerializer,
    HallDetailSerializer, ClubDetailSerializer
)
from .permissions import IsAuthorOrReadOnly


class HallViewSet(viewsets.ReadOnlyModelViewSet):
    """
    API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–º–∏ –∑–∞–ª–∞–º–∏.
    """
    queryset = Hall.objects.all()
    permission_classes = [AllowAny]  # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö (–ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø)

    def get_serializer_class(self):
        if self.action == 'retrieve':
            return HallDetailSerializer
        return HallSerializer

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–µ –∑–∞–ª—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–ª–æ–≤',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã—Ö –∑–∞–ª–æ–≤. –°–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –∑–∞–ª–µ, —Ç–∞–∫—É—é –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∞–¥—Ä–µ—Å –∏ —Ä–µ–π—Ç–∏–Ω–≥. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.',
        responses={200: HallSerializer(many=True)}
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–µ –∑–∞–ª—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–ª–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω–æ–º –∑–∞–ª–µ –ø–æ –µ–≥–æ ID. –í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –ø–æ–¥—Ä–æ–±–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã, –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å, —Ü–µ–Ω—ã –∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤.',
        responses={200: HallDetailSerializer()}
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–µ –∑–∞–ª—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã –∑–∞–ª–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤, –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–ª–∞. –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ–∫—Ü–∏–∏ —Å –æ—Ç–∑—ã–≤–∞–º–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞–ª–∞.',
        responses={200: ReviewSerializer(many=True)}
    )
    @action(detail=True, methods=['get'])
    def reviews(self, request, pk=None):
        hall = self.get_object()
        reviews = hall.reviews.all()
        serializer = ReviewSerializer(reviews, many=True)
        return Response(serializer.data)


class ClubViewSet(viewsets.ReadOnlyModelViewSet):
    """
    API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–º–∏ –∫–ª—É–±–∞–º–∏.
    """
    queryset = Club.objects.all()
    permission_classes = []  # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö (–ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø)

    def get_serializer_class(self):
        if self.action == 'retrieve':
            return ClubDetailSerializer
        return ClubSerializer

    @swagger_auto_schema(
        tags=['üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–µ –∫–ª—É–±—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–ª—É–±–æ–≤',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã—Ö –∫–ª—É–±–æ–≤. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç—Ä–µ–Ω–µ—Ä–∞ –∏ —Ä–µ–π—Ç–∏–Ω–≥. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ–±—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–ª—É–±–æ–≤.',
        responses={200: ClubSerializer(many=True)}
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–µ –∫–ª—É–±—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–ª—É–±–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫–ª—É–±–µ –ø–æ –µ–≥–æ ID. –í–∫–ª—é—á–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã, —Ü–µ–Ω—É –∏ –≤—Å–µ –æ—Ç–∑—ã–≤—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–ª—É–±–æ–º.',
        responses={200: ClubDetailSerializer()}
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–µ –∫–ª—É–±—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã –∫–ª—É–±–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤, –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—É–±–∞. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Å–µ–∫—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–ª—É–±–∞.',
        responses={200: ReviewSerializer(many=True)}
    )
    @action(detail=True, methods=['get'])
    def reviews(self, request, pk=None):
        club = self.get_object()
        reviews = club.reviews.all()
        serializer = ReviewSerializer(reviews, many=True)
        return Response(serializer.data)


class ReviewViewSet(viewsets.ModelViewSet):
    """
    API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏.
    """
    serializer_class = ReviewSerializer
    permission_classes = [IsAuthenticatedOrReadOnly, IsAuthorOrReadOnly]

    def get_queryset(self):
        queryset = Review.objects.all()
        hall_id = self.request.query_params.get('hall_id')
        club_id = self.request.query_params.get('club_id')

        if hall_id:
            queryset = queryset.filter(hall_id=hall_id)
        if club_id:
            queryset = queryset.filter(club_id=club_id)

        return queryset

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤. –ú–æ–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤—ã –ø–æ `hall_id` (ID –∑–∞–ª–∞) –∏–ª–∏ `club_id` (ID –∫–ª—É–±–∞), –ø–µ—Ä–µ–¥–∞–≤ –∏—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ query-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, `/reviews/?hall_id=1`.',
        manual_parameters=[
            openapi.Parameter('hall_id', openapi.IN_QUERY, type=openapi.TYPE_INTEGER,
                              description='ID –∑–∞–ª–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤'),
            openapi.Parameter('club_id', openapi.IN_QUERY, type=openapi.TYPE_INTEGER,
                              description='ID –∫–ª—É–±–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤')
        ],
        responses={200: ReviewSerializer(many=True)}
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–û—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤',
        operation_description='–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤ –¥–ª—è –∑–∞–ª–∞ –∏–ª–∏ –∫–ª—É–±–∞. **–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.** –í —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å `hall` –∏–ª–∏ `club`, `rating` –∏ `text`.',
        request_body=ReviewSerializer,
        responses={201: ReviewSerializer(), 401: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', 400: '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'}
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—Ç–∑—ã–≤–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –æ—Ç–∑—ã–≤–µ –ø–æ –µ–≥–æ ID.',
        responses={200: ReviewSerializer(), 404: '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'}
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–∑—ã–≤ (PUT)',
        operation_description='–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ—Ç–∑—ã–≤ –ø–æ –µ–≥–æ ID. **–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä—É –æ—Ç–∑—ã–≤–∞.**',
        request_body=ReviewSerializer,
        responses={200: ReviewSerializer(), 401: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', 403: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 404: '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'}
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç–∑—ã–≤ (PATCH)',
        operation_description='–ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ—Ç–∑—ã–≤ –ø–æ –µ–≥–æ ID. –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—è. **–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä—É –æ—Ç–∑—ã–≤–∞.**',
        request_body=ReviewSerializer,
        responses={200: ReviewSerializer(), 401: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', 403: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 404: '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'}
    )
    def partial_update(self, request, *args, **kwargs):
        return super().partial_update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤',
        operation_description='–£–¥–∞–ª—è–µ—Ç –æ—Ç–∑—ã–≤ –ø–æ –µ–≥–æ ID. **–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä—É –æ—Ç–∑—ã–≤–∞.**',
        responses={204: '–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ', 401: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', 403: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', 404: '–û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω'}
    )
    def destroy(self, request, *args, **kwargs):
        return super().destroy(request, *args, **kwargs)

    def perform_create(self, serializer):
        serializer.save(author=self.request.user)
