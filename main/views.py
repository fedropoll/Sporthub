from django.db.models import Avg, Count
from rest_framework import viewsets, filters
from rest_framework.permissions import AllowAny, IsAuthenticated
from rest_framework.response import Response
from rest_framework.decorators import action
from django_filters.rest_framework import DjangoFilterBackend

from users.models import Hall, Club, Review
from users.permissions import IsOwnerOrAdmin
from .serializers import (
    HallSerializer, ClubSerializer, ReviewSerializer,
    HallDetailSerializer, ClubDetailSerializer, AdminReviewSerializer
)


from drf_yasg.utils import swagger_auto_schema

class HallViewSet(viewsets.ReadOnlyModelViewSet):
    queryset = Hall.objects.all().annotate(
        average_rating=Avg('reviews__rating'),
        review_count=Count('reviews')
    )
    permission_classes = [AllowAny]
    filter_backends = [DjangoFilterBackend, filters.SearchFilter]
    filterset_fields = ['type', 'coating', 'has_locker_room', 'has_shower', 'has_lighting']
    search_fields = ['title', 'address', 'inventory']

    def get_serializer_class(self):
        if self.action == 'retrieve':
            return HallDetailSerializer
        return HallSerializer

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ó–∞–ª—ã'],
        operation_summary='–°–ø–∏—Å–æ–∫ –∑–∞–ª–æ–≤',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ª–æ–≤ —Å –º–∏–Ω–∏-–æ–ø–∏—Å–∞–Ω–∏—è–º–∏, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –∏ —Å—Ä–µ–¥–Ω–µ–π –æ—Ü–µ–Ω–∫–æ–π.'
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ó–∞–ª—ã'],
        operation_summary='–î–µ—Ç–∞–ª–∏ –∑–∞–ª–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∑–∞–ª–µ, –≤–∫–ª—é—á–∞—è –≤—Å–µ –æ—Ç–∑—ã–≤—ã.'
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ó–∞–ª—ã'],
        operation_summary='–û—Ç–∑—ã–≤—ã –∑–∞–ª–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤ –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–ª–∞.'
    )
    @action(detail=True, methods=['get'])
    def reviews(self, request, pk=None):
        hall = self.get_object()
        serializer = ReviewSerializer(hall.reviews.all(), many=True)
        return Response(serializer.data)


class ClubViewSet(viewsets.ReadOnlyModelViewSet):
    queryset = Club.objects.all().annotate(
        average_rating=Avg('reviews__rating'),
        review_count=Count('reviews')
    )
    permission_classes = [AllowAny]
    filter_backends = [DjangoFilterBackend, filters.SearchFilter]
    filterset_fields = ['hall']
    search_fields = ['title', 'description', 'sport']

    def get_serializer_class(self):
        if self.action == 'retrieve':
            return ClubDetailSerializer
        return ClubSerializer

    @swagger_auto_schema(
        tags=['üèÄ –ö–ª—É–±—ã'],
        operation_summary='–°–ø–∏—Å–æ–∫ –∫–ª—É–±–æ–≤',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª—É–±–æ–≤ —Å –º–∏–Ω–∏-–æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –∏ –∑–∞–ª–∞–º–∏, –∫ –∫–æ—Ç–æ—Ä—ã–º –æ–Ω–∏ –æ—Ç–Ω–æ—Å—è—Ç—Å—è.'
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèÄ –ö–ª—É–±—ã'],
        operation_summary='–î–µ—Ç–∞–ª–∏ –∫–ª—É–±–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∫–ª—É–±–µ, –≤–∫–ª—é—á–∞—è –≤—Å–µ –æ—Ç–∑—ã–≤—ã.'
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèÄ –ö–ª—É–±—ã'],
        operation_summary='–û—Ç–∑—ã–≤—ã –∫–ª—É–±–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤ –¥–∞–Ω–Ω–æ–≥–æ –∫–ª—É–±–∞.'
    )
    @action(detail=True, methods=['get'])
    def reviews(self, request, pk=None):
        club = self.get_object()
        serializer = ReviewSerializer(club.reviews.all(), many=True)
        return Response(serializer.data)


class ReviewViewSet(viewsets.ModelViewSet):
    queryset = Review.objects.all()

    def get_permissions(self):
        if self.action in ['list', 'retrieve']:
            return [AllowAny()]
        elif self.action == 'create':
            return [IsAuthenticated()]
        return [IsAuthenticated(), IsOwnerOrAdmin()]

    def get_serializer_class(self):
        user = self.request.user
        if user.is_staff:
            return AdminReviewSerializer
        return ReviewSerializer

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤. –î–ª—è –∞–¥–º–∏–Ω–æ–≤ –≤–∏–¥–Ω—ã –≤—Å–µ –ø–æ–ª—è.'
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–î–µ—Ç–∞–ª–∏ –æ—Ç–∑—ã–≤–∞',
        operation_description='–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –æ—Ç–∑—ã–≤–µ. –î–ª—è –∞–¥–º–∏–Ω–æ–≤ –≤–∏–¥–Ω—ã –≤—Å–µ –ø–æ–ª—è.'
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–°–æ–∑–¥–∞—Ç—å –æ—Ç–∑—ã–≤',
        operation_description='–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤. –î–ª—è –∞–¥–º–∏–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –ø–æ–ª—è.'
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–∑—ã–≤',
        operation_description='–ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞. –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º.'
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç–∑—ã–≤',
        operation_description='–ß–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞. –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º.'
    )
    def partial_update(self, request, *args, **kwargs):
        return super().partial_update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üìù –û—Ç–∑—ã–≤—ã'],
        operation_summary='–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤',
        operation_description='–£–¥–∞–ª—è–µ—Ç –æ—Ç–∑—ã–≤. –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.'
    )
    def destroy(self, request, *args, **kwargs):
        return super().destroy(request, *args, **kwargs)
