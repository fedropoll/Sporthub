from rest_framework import viewsets, permissions, status
from rest_framework.response import Response
from rest_framework.decorators import action
from drf_yasg.utils import swagger_auto_schema
from drf_yasg import openapi
from django.contrib.auth.models import User
from django.shortcuts import get_object_or_404
from django.db import IntegrityError
from rest_framework_simplejwt.views import TokenObtainPairView
from django.core.mail import send_mail
from django.conf import settings

from .serializers import (
    UserSerializer,
    RegisterSerializer,
    LoginSerializer,
    UserProfileSerializer,
    PasswordChangeSerializer,
    TrainerSerializer,
    HallSerializer,
    ClubSerializer,
    AdSerializer,
    ReviewSerializer,
    NotificationSerializer,
    ClientDetailSerializer,
    ForgotPasswordSerializer,
    ResetPasswordSerializer,
    VerifyCodeSerializer,
)
from .models import (
    UserProfile,
    PasswordResetCode,
    Trainer,
    Hall,
    Club,
    Ad,
    Review,
    Notification,
)


class RegisterView(viewsets.ViewSet):
    serializer_class = RegisterSerializer
    permission_classes = [permissions.AllowAny]

    @swagger_auto_schema(
        tags=['üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'],
        operation_summary='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        operation_description='''
        –≠—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å `email`, `password`, `confirmPassword`, `firstName`, `lastName`, `phone_number`, `birth_date`.
        –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π email.
        –ü–∞—Ä–æ–ª–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å –∏ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤.
        '''
    )
    def create(self, request):
        serializer = self.serializer_class(data=request.data)
        if serializer.is_valid():
            try:
                user = serializer.save()
                refresh = TokenObtainPairView.get_serializer().get_token(user)
                return Response(
                    {
                        "user": UserSerializer(user).data,
                        "refresh": str(refresh),
                        "access": str(refresh.access_token),
                    },
                    status=status.HTTP_201_CREATED,
                )
            except IntegrityError:
                return Response(
                    {"email": ["–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."]},
                    status=status.HTTP_400_BAD_REQUEST,
                )
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)


class VerifyCodeView(viewsets.ViewSet):
    serializer_class = VerifyCodeSerializer

    @swagger_auto_schema(
        tags=['üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'],
        operation_summary='–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏',
        operation_description='''
        –≠—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
        –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å `email` –∏ `code` (4-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –ø–æ—á—Ç—É).
        –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.
        '''
    )
    def create(self, request):
        serializer = self.serializer_class(data=request.data)
        if serializer.is_valid():
            return Response(
                {"detail": "–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"},
                status=status.HTTP_200_OK
            )
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)


class LoginView(TokenObtainPairView):
    serializer_class = LoginSerializer

    @swagger_auto_schema(
        tags=['üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'],
        operation_summary='–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É',
        operation_description='''
        –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É.
        –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å `email` –∏ `password`.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–∞—Ä—É —Ç–æ–∫–µ–Ω–æ–≤ (access –∏ refresh), –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –¥—Ä—É–≥–∏—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞—Ö.
        '''
    )
    def post(self, request, *args, **kwargs):
        return super().post(request, *args, **kwargs)


class UserProfileViewSet(viewsets.ModelViewSet):
    queryset = UserProfile.objects.all()
    serializer_class = UserProfileSerializer
    permission_classes = [permissions.IsAuthenticated]
    http_method_names = ['get', 'patch']

    def get_object(self):
        return self.request.user.userprofile

    @swagger_auto_schema(
        tags=['üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è',
        operation_description='''
        –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ —Ç–µ–∫—É—â–µ–≥–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        '''
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è',
        operation_description='''
        –ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        –ú–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å `phone_number` –∏ `birth_date`.
        '''
    )
    def partial_update(self, request, *args, **kwargs):
        return super().partial_update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)',
        operation_description='''
        **–í–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.**
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        '''
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    def get_permissions(self):
        if self.action == 'list':
            self.permission_classes = [permissions.IsAdminUser]
        return super().get_permissions()

class PasswordChangeView(viewsets.ViewSet):
    serializer_class = PasswordChangeSerializer
    permission_classes = [permissions.IsAuthenticated]

    @swagger_auto_schema(
        tags=['üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'],
        operation_summary='–°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è',
        operation_description='''
        –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å (`old_password`) –∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å (`new_password`).
        '''
    )
    def create(self, request):
        serializer = self.serializer_class(data=request.data, context={'request': request})
        if serializer.is_valid():
            serializer.save()
            return Response({"detail": "–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω."}, status=status.HTTP_200_OK)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)


class PasswordResetView(viewsets.ViewSet):
    @swagger_auto_schema(
        tags=['üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'],
        operation_summary='–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è',
        operation_description='''
        –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–¥ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è.
        –ù–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π `email` –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω 4-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥.
        '''
    )
    @action(detail=False, methods=['post'], url_path='request')
    def request_reset(self, request):
        serializer = ForgotPasswordSerializer(data=request.data)
        if serializer.is_valid(raise_exception=True):
            user = get_object_or_404(User, email=serializer.validated_data['email'])
            code = PasswordResetCode.generate_code()
            PasswordResetCode.objects.create(user=user, code=code)

            # TODO: –õ–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email
            return Response({'detail': '–ö–æ–¥ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.'}, status=status.HTTP_200_OK)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

    @swagger_auto_schema(
        tags=['üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'],
        operation_summary='–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è —Å –ø–æ–º–æ—â—å—é –∫–æ–¥–∞',
        operation_description='''
        –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å, –∏—Å–ø–æ–ª—å–∑—É—è `email`, `code` (–ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–æ –ø–æ—á—Ç–µ) –∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å.
        '''
    )
    @action(detail=False, methods=['post'], url_path='confirm')
    def confirm_reset(self, request):
        serializer = ResetPasswordSerializer(data=request.data)
        if serializer.is_valid():
            user = serializer.save()
            return Response({'detail': '–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.'}, status=status.HTTP_200_OK)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)


class ClientViewSet(viewsets.ModelViewSet):
    queryset = UserProfile.objects.select_related('user').all()
    serializer_class = ClientDetailSerializer
    permission_classes = [permissions.IsAdminUser]
    http_method_names = ['get', 'delete']

    @swagger_auto_schema(
        tags=['üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ö–ª–∏–µ–Ω—Ç—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
        operation_description='''
        –≠—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∏—Ö –ø—Ä–æ—Ñ–∏–ª—è–º–∏.
        '''
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ö–ª–∏–µ–Ω—Ç—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞',
        operation_description='''
        –≠—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫–ª–∏–µ–Ω—Ç–µ –ø–æ –µ–≥–æ ID.
        '''
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ö–ª–∏–µ–Ω—Ç—ã'],
        operation_summary='–£–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞',
        operation_description='''
        –≠—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        –£–¥–∞–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –µ–≥–æ ID.
        '''
    )
    def destroy(self, request, *args, **kwargs):
        instance = self.get_object()
        user_instance = instance.user
        user_instance.delete()
        return Response(status=status.HTTP_204_NO_CONTENT)


class HallViewSet(viewsets.ModelViewSet):
    queryset = Hall.objects.all()
    serializer_class = HallSerializer

    def get_permissions(self):
        if self.action in ['list', 'retrieve']:
            self.permission_classes = [permissions.AllowAny]
        else:
            self.permission_classes = [permissions.IsAdminUser]
        return super().get_permissions()

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ó–∞–ª—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ª–æ–≤',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –∑–∞–ª–æ–≤. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö.
        '''
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ó–∞–ª—ã'],
        operation_summary='–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–ª',
        operation_description='''
        –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ó–∞–ª—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–ª–∞',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∑–∞–ª–µ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö.
        '''
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ó–∞–ª—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ª (–ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ª–µ. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ó–∞–ª—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ª (—á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ª–µ. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def partial_update(self, request, *args, **kwargs):
        return super().partial_update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üèüÔ∏è –ó–∞–ª—ã'],
        operation_summary='–£–¥–∞–ª–∏—Ç—å –∑–∞–ª',
        operation_description='''
        –£–¥–∞–ª—è–µ—Ç –∑–∞–ª –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def destroy(self, request, *args, **kwargs):
        return super().destroy(request, *args, **kwargs)


class ClubViewSet(viewsets.ModelViewSet):
    queryset = Club.objects.all()
    serializer_class = ClubSerializer

    def get_permissions(self):
        if self.action in ['list', 'retrieve']:
            self.permission_classes = [permissions.AllowAny]
        else:
            self.permission_classes = [permissions.IsAdminUser]
        return super().get_permissions()

    @swagger_auto_schema(
        tags=['ü§∏‚Äç‚ôÇÔ∏è –ö–ª—É–±—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª—É–±–æ–≤',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –∫–ª—É–±–æ–≤. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö.
        '''
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['ü§∏‚Äç‚ôÇÔ∏è –ö–ª—É–±—ã'],
        operation_summary='–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª—É–±',
        operation_description='''
        –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–ª—É–±. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['ü§∏‚Äç‚ôÇÔ∏è –ö–ª—É–±—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–ª—É–±–∞',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫–ª—É–±–µ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö.
        '''
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['ü§∏‚Äç‚ôÇÔ∏è –ö–ª—É–±—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –∫–ª—É–± (–ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—É–±–µ. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['ü§∏‚Äç‚ôÇÔ∏è –ö–ª—É–±—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –∫–ª—É–± (—á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—É–±–µ. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def partial_update(self, request, *args, **kwargs):
        return super().partial_update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['ü§∏‚Äç‚ôÇÔ∏è –ö–ª—É–±—ã'],
        operation_summary='–£–¥–∞–ª–∏—Ç—å –∫–ª—É–±',
        operation_description='''
        –£–¥–∞–ª—è–µ—Ç –∫–ª—É–± –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def destroy(self, request, *args, **kwargs):
        return super().destroy(request, *args, **kwargs)


class TrainerViewSet(viewsets.ModelViewSet):
    queryset = Trainer.objects.all()
    serializer_class = TrainerSerializer

    def get_permissions(self):
        if self.action in ['list', 'retrieve']:
            self.permission_classes = [permissions.AllowAny]
        else:
            self.permission_classes = [permissions.IsAdminUser]
        return super().get_permissions()

    @swagger_auto_schema(
        tags=['üí™ –¢—Ä–µ–Ω–µ—Ä—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö.
        '''
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí™ –¢—Ä–µ–Ω–µ—Ä—ã'],
        operation_summary='–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞',
        operation_description='''
        –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí™ –¢—Ä–µ–Ω–µ—Ä—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —Ç—Ä–µ–Ω–µ—Ä–∞',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ç—Ä–µ–Ω–µ—Ä–µ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö.
        '''
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí™ –¢—Ä–µ–Ω–µ—Ä—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞ (–ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–Ω–µ—Ä–µ. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí™ –¢—Ä–µ–Ω–µ—Ä—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞ (—á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–Ω–µ—Ä–µ. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def partial_update(self, request, *args, **kwargs):
        return super().partial_update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí™ –¢—Ä–µ–Ω–µ—Ä—ã'],
        operation_summary='–£–¥–∞–ª–∏—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞',
        operation_description='''
        –£–¥–∞–ª—è–µ—Ç —Ç—Ä–µ–Ω–µ—Ä–∞ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def destroy(self, request, *args, **kwargs):
        return super().destroy(request, *args, **kwargs)


class AdViewSet(viewsets.ModelViewSet):
    queryset = Ad.objects.all()
    serializer_class = AdSerializer

    def get_permissions(self):
        if self.action in ['list', 'retrieve']:
            self.permission_classes = [permissions.AllowAny]
        else:
            self.permission_classes = [permissions.IsAdminUser]
        return super().get_permissions()

    @swagger_auto_schema(
        tags=['üì£ –û–±—ä—è–≤–ª–µ–Ω–∏—è'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö.
        '''
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üì£ –û–±—ä—è–≤–ª–µ–Ω–∏—è'],
        operation_summary='–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ',
        operation_description='''
        –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üì£ –û–±—ä—è–≤–ª–µ–Ω–∏—è'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö.
        '''
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üì£ –û–±—ä—è–≤–ª–µ–Ω–∏—è'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ (–ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üì£ –û–±—ä—è–≤–ª–µ–Ω–∏—è'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ (—á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def partial_update(self, request, *args, **kwargs):
        return super().partial_update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üì£ –û–±—ä—è–≤–ª–µ–Ω–∏—è'],
        operation_summary='–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ',
        operation_description='''
        –£–¥–∞–ª—è–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def destroy(self, request, *args, **kwargs):
        return super().destroy(request, *args, **kwargs)


class ReviewViewSet(viewsets.ModelViewSet):
    queryset = Review.objects.all()
    serializer_class = ReviewSerializer

    def get_permissions(self):
        if self.action == 'create':
            self.permission_classes = [permissions.IsAuthenticated]
        elif self.action in ['list', 'destroy']:
            self.permission_classes = [permissions.IsAdminUser]
        return super().get_permissions()

    @swagger_auto_schema(
        tags=['üí¨ –û—Ç–∑—ã–≤—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí¨ –û—Ç–∑—ã–≤—ã'],
        operation_summary='–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤',
        operation_description='''
        –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤. –¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        '''
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí¨ –û—Ç–∑—ã–≤—ã'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—Ç–∑—ã–≤–∞',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –æ—Ç–∑—ã–≤–µ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö.
        '''
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí¨ –û—Ç–∑—ã–≤—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–∑—ã–≤ (–ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–∑—ã–≤–µ. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí¨ –û—Ç–∑—ã–≤—ã'],
        operation_summary='–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–∑—ã–≤ (—á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)',
        operation_description='''
        –ß–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–∑—ã–≤–µ. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def partial_update(self, request, *args, **kwargs):
        return super().partial_update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üí¨ –û—Ç–∑—ã–≤—ã'],
        operation_summary='–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤',
        operation_description='''
        –£–¥–∞–ª—è–µ—Ç –æ—Ç–∑—ã–≤ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def destroy(self, request, *args, **kwargs):
        return super().destroy(request, *args, **kwargs)


class NotificationViewSet(viewsets.ModelViewSet):
    queryset = Notification.objects.all()
    serializer_class = NotificationSerializer
    permission_classes = [permissions.IsAdminUser]
    http_method_names = ['get', 'delete']

    @swagger_auto_schema(
        tags=['üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
        operation_summary='–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        operation_description='''
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def retrieve(self, request, *args, **kwargs):
        return super().retrieve(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=['üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
        operation_summary='–£–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
        operation_description='''
        –£–¥–∞–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ –µ–≥–æ ID. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
        '''
    )
    def destroy(self, request, *args, **kwargs):
        return super().destroy(request, *args, **kwargs)